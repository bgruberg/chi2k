// G E T   V A R I A B L E S   F R O M   T T R E E


// M O T H E R   V A R I A B L E S
//------------------------------------------------------------------------------

TTreeReaderValue <Double_t> chic_ETA ( myReader, "chic_ETA" );
TTreeReaderValue <Double_t> chic_Y ( myReader, "chic_Y" );
TTreeReaderValue <Double_t> chic_ENDVERTEX_X ( myReader, "chic_ENDVERTEX_X" );
TTreeReaderValue <Double_t> chic_ENDVERTEX_Y ( myReader, "chic_ENDVERTEX_Y" );
TTreeReaderValue <Double_t> chic_ENDVERTEX_Z ( myReader, "chic_ENDVERTEX_Z" );
TTreeReaderValue <Double_t> chic_ENDVERTEX_XERR ( myReader, "chic_ENDVERTEX_XERR" );
TTreeReaderValue <Double_t> chic_ENDVERTEX_YERR ( myReader, "chic_ENDVERTEX_YERR" );
TTreeReaderValue <Double_t> chic_ENDVERTEX_ZERR ( myReader, "chic_ENDVERTEX_ZERR" );
TTreeReaderValue <Double_t> chic_ENDVERTEX_CHI2 ( myReader, "chic_ENDVERTEX_CHI2" );
TTreeReaderValue <Int_t> chic_ENDVERTEX_NDOF ( myReader, "chic_ENDVERTEX_NDOF" );
TTreeReaderValue <Float_t> chic_ENDVERTEX_COV_ ( myReader, "chic_ENDVERTEX_COV_" );
TTreeReaderValue <Double_t> chic_OWNPV_X ( myReader, "chic_OWNPV_X" );
TTreeReaderValue <Double_t> chic_OWNPV_Y ( myReader, "chic_OWNPV_Y" );
TTreeReaderValue <Double_t> chic_OWNPV_Z ( myReader, "chic_OWNPV_Z" );
TTreeReaderValue <Double_t> chic_OWNPV_XERR ( myReader, "chic_OWNPV_XERR" );
TTreeReaderValue <Double_t> chic_OWNPV_YERR ( myReader, "chic_OWNPV_YERR" );
TTreeReaderValue <Double_t> chic_OWNPV_ZERR ( myReader, "chic_OWNPV_ZERR" );
TTreeReaderValue <Double_t> chic_OWNPV_CHI2 ( myReader, "chic_OWNPV_CHI2" );
TTreeReaderValue <Int_t> chic_OWNPV_NDOF ( myReader, "chic_OWNPV_NDOF" );
TTreeReaderValue <Float_t> chic_OWNPV_COV_ ( myReader, "chic_OWNPV_COV_" );
TTreeReaderValue <Double_t> chic_IP_OWNPV ( myReader, "chic_IP_OWNPV" );
TTreeReaderValue <Double_t> chic_IPCHI2_OWNPV ( myReader, "chic_IPCHI2_OWNPV" );
TTreeReaderValue <Double_t> chic_FD_OWNPV ( myReader, "chic_FD_OWNPV" );
TTreeReaderValue <Double_t> chic_FDCHI2_OWNPV ( myReader, "chic_FDCHI2_OWNPV" );
TTreeReaderValue <Double_t> chic_DIRA_OWNPV ( myReader, "chic_DIRA_OWNPV" );
TTreeReaderValue <Double_t> chic_P ( myReader, "chic_P" );
TTreeReaderValue <Double_t> chic_PT ( myReader, "chic_PT" );
TTreeReaderValue <Double_t> chic_PE ( myReader, "chic_PE" );
TTreeReaderValue <Double_t> chic_PX ( myReader, "chic_PX" );
TTreeReaderValue <Double_t> chic_PY ( myReader, "chic_PY" );
TTreeReaderValue <Double_t> chic_PZ ( myReader, "chic_PZ" );
TTreeReaderValue <Double_t> chic_MM ( myReader, "chic_MM" );
TTreeReaderValue <Double_t> chic_MMERR ( myReader, "chic_MMERR" );
TTreeReaderValue <Double_t> chic_M ( myReader, "chic_M" );
TTreeReaderValue <Int_t> chic_ID ( myReader, "chic_ID" );


// D A U G H T E R   V A R I A B L E S
//------------------------------------------------------------------------------

// Kaon 1
TTreeReaderValue <Double_t> kaon1_ETA ( myReader, "kaon1_ETA" );
TTreeReaderValue <Double_t> kaon1_Y ( myReader, "kaon1_Y" );
TTreeReaderValue <Double_t> kaon1_OWNPV_X ( myReader, "kaon1_OWNPV_X" );
TTreeReaderValue <Double_t> kaon1_OWNPV_Y ( myReader, "kaon1_OWNPV_Y" );
TTreeReaderValue <Double_t> kaon1_OWNPV_Z ( myReader, "kaon1_OWNPV_Z" );
TTreeReaderValue <Double_t> kaon1_OWNPV_XERR ( myReader, "kaon1_OWNPV_XERR" );
TTreeReaderValue <Double_t> kaon1_OWNPV_YERR ( myReader, "kaon1_OWNPV_YERR" );
TTreeReaderValue <Double_t> kaon1_OWNPV_ZERR ( myReader, "kaon1_OWNPV_ZERR" );
TTreeReaderValue <Double_t> kaon1_OWNPV_CHI2 ( myReader, "kaon1_OWNPV_CHI2" );
TTreeReaderValue <Int_t> kaon1_OWNPV_NDOF ( myReader, "kaon1_OWNPV_NDOF" );
TTreeReaderValue <Float_t> kaon1_OWNPV_COV_ ( myReader, "kaon1_OWNPV_COV_" );
TTreeReaderValue <Double_t> kaon1_IP_OWNPV ( myReader, "kaon1_IP_OWNPV" );
TTreeReaderValue <Double_t> kaon1_IPCHI2_OWNPV ( myReader, "kaon1_IPCHI2_OWNPV" );
TTreeReaderValue <Double_t> kaon1_ORIVX_X ( myReader, "kaon1_ORIVX_X" );
TTreeReaderValue <Double_t> kaon1_ORIVX_Y ( myReader, "kaon1_ORIVX_Y" );
TTreeReaderValue <Double_t> kaon1_ORIVX_Z ( myReader, "kaon1_ORIVX_Z" );
TTreeReaderValue <Double_t> kaon1_ORIVX_XERR ( myReader, "kaon1_ORIVX_XERR" );
TTreeReaderValue <Double_t> kaon1_ORIVX_YERR ( myReader, "kaon1_ORIVX_YERR" );
TTreeReaderValue <Double_t> kaon1_ORIVX_ZERR ( myReader, "kaon1_ORIVX_ZERR" );
TTreeReaderValue <Double_t> kaon1_ORIVX_CHI2 ( myReader, "kaon1_ORIVX_CHI2" );
TTreeReaderValue <Int_t> kaon1_ORIVX_NDOF ( myReader, "kaon1_ORIVX_NDOF" );
TTreeReaderValue <Float_t> kaon1_ORIVX_COV_ ( myReader, "kaon1_ORIVX_COV_" );
TTreeReaderValue <Double_t> kaon1_P ( myReader, "kaon1_P" );
TTreeReaderValue <Double_t> kaon1_PT ( myReader, "kaon1_PT" );
TTreeReaderValue <Double_t> kaon1_PE ( myReader, "kaon1_PE" );
TTreeReaderValue <Double_t> kaon1_PX ( myReader, "kaon1_PX" );
TTreeReaderValue <Double_t> kaon1_PY ( myReader, "kaon1_PY" );
TTreeReaderValue <Double_t> kaon1_PZ ( myReader, "kaon1_PZ" );
TTreeReaderValue <Double_t> kaon1_M ( myReader, "kaon1_M" );
TTreeReaderValue <Int_t> kaon1_ID ( myReader, "kaon1_ID" );
TTreeReaderValue <Double_t> kaon1_PIDe ( myReader, "kaon1_PIDe" );
TTreeReaderValue <Double_t> kaon1_PIDmu ( myReader, "kaon1_PIDmu" );
TTreeReaderValue <Double_t> kaon1_PIDK ( myReader, "kaon1_PIDK" );
TTreeReaderValue <Double_t> kaon1_PIDp ( myReader, "kaon1_PIDp" );
TTreeReaderValue <Double_t> kaon1_ProbNNe ( myReader, "kaon1_ProbNNe" );
TTreeReaderValue <Double_t> kaon1_ProbNNk ( myReader, "kaon1_ProbNNk" );
TTreeReaderValue <Double_t> kaon1_ProbNNp ( myReader, "kaon1_ProbNNp" );
TTreeReaderValue <Double_t> kaon1_ProbNNpi ( myReader, "kaon1_ProbNNpi" );
TTreeReaderValue <Double_t> kaon1_ProbNNmu ( myReader, "kaon1_ProbNNmu" );
TTreeReaderValue <Double_t> kaon1_ProbNNghost ( myReader, "kaon1_ProbNNghost" );
TTreeReaderValue <Bool_t> kaon1_hasMuon ( myReader, "kaon1_hasMuon" );
TTreeReaderValue <Bool_t> kaon1_isMuon ( myReader, "kaon1_isMuon" );
TTreeReaderValue <Bool_t> kaon1_hasRich ( myReader, "kaon1_hasRich" );
TTreeReaderValue <Bool_t> kaon1_hasCalo ( myReader, "kaon1_hasCalo" );
TTreeReaderValue <Int_t> kaon1_TRACK_Type ( myReader, "kaon1_TRACK_Type" );
TTreeReaderValue <Int_t> kaon1_TRACK_Key ( myReader, "kaon1_TRACK_Key" );
TTreeReaderValue <Double_t> kaon1_TRACK_CHI2NDOF ( myReader, "kaon1_TRACK_CHI2NDOF" );
TTreeReaderValue <Double_t> kaon1_TRACK_PCHI2 ( myReader, "kaon1_TRACK_PCHI2" );
TTreeReaderValue <Double_t> kaon1_TRACK_MatchCHI2 ( myReader, "kaon1_TRACK_MatchCHI2" );
TTreeReaderValue <Double_t> kaon1_TRACK_GhostProb ( myReader, "kaon1_TRACK_GhostProb" );
TTreeReaderValue <Double_t> kaon1_TRACK_CloneDist ( myReader, "kaon1_TRACK_CloneDist" );
TTreeReaderValue <Double_t> kaon1_TRACK_Likelihood ( myReader, "kaon1_TRACK_Likelihood" );

// Kaon 2
TTreeReaderValue <Double_t> kaon2_ETA ( myReader, "kaon2_ETA" );
TTreeReaderValue <Double_t> kaon2_Y ( myReader, "kaon2_Y" );
TTreeReaderValue <Double_t> kaon2_OWNPV_X ( myReader, "kaon2_OWNPV_X" );
TTreeReaderValue <Double_t> kaon2_OWNPV_Y ( myReader, "kaon2_OWNPV_Y" );
TTreeReaderValue <Double_t> kaon2_OWNPV_Z ( myReader, "kaon2_OWNPV_Z" );
TTreeReaderValue <Double_t> kaon2_OWNPV_XERR ( myReader, "kaon2_OWNPV_XERR" );
TTreeReaderValue <Double_t> kaon2_OWNPV_YERR ( myReader, "kaon2_OWNPV_YERR" );
TTreeReaderValue <Double_t> kaon2_OWNPV_ZERR ( myReader, "kaon2_OWNPV_ZERR" );
TTreeReaderValue <Double_t> kaon2_OWNPV_CHI2 ( myReader, "kaon2_OWNPV_CHI2" );
TTreeReaderValue <Int_t> kaon2_OWNPV_NDOF ( myReader, "kaon2_OWNPV_NDOF" );
TTreeReaderValue <Float_t> kaon2_OWNPV_COV_ ( myReader, "kaon2_OWNPV_COV_" );
TTreeReaderValue <Double_t> kaon2_IP_OWNPV ( myReader, "kaon2_IP_OWNPV" );
TTreeReaderValue <Double_t> kaon2_IPCHI2_OWNPV ( myReader, "kaon2_IPCHI2_OWNPV" );
TTreeReaderValue <Double_t> kaon2_ORIVX_X ( myReader, "kaon2_ORIVX_X" );
TTreeReaderValue <Double_t> kaon2_ORIVX_Y ( myReader, "kaon2_ORIVX_Y" );
TTreeReaderValue <Double_t> kaon2_ORIVX_Z ( myReader, "kaon2_ORIVX_Z" );
TTreeReaderValue <Double_t> kaon2_ORIVX_XERR ( myReader, "kaon2_ORIVX_XERR" );
TTreeReaderValue <Double_t> kaon2_ORIVX_YERR ( myReader, "kaon2_ORIVX_YERR" );
TTreeReaderValue <Double_t> kaon2_ORIVX_ZERR ( myReader, "kaon2_ORIVX_ZERR" );
TTreeReaderValue <Double_t> kaon2_ORIVX_CHI2 ( myReader, "kaon2_ORIVX_CHI2" );
TTreeReaderValue <Int_t> kaon2_ORIVX_NDOF ( myReader, "kaon2_ORIVX_NDOF" );
TTreeReaderValue <Float_t> kaon2_ORIVX_COV_ ( myReader, "kaon2_ORIVX_COV_" );
TTreeReaderValue <Double_t> kaon2_P ( myReader, "kaon2_P" );
TTreeReaderValue <Double_t> kaon2_PT ( myReader, "kaon2_PT" );
TTreeReaderValue <Double_t> kaon2_PE ( myReader, "kaon2_PE" );
TTreeReaderValue <Double_t> kaon2_PX ( myReader, "kaon2_PX" );
TTreeReaderValue <Double_t> kaon2_PY ( myReader, "kaon2_PY" );
TTreeReaderValue <Double_t> kaon2_PZ ( myReader, "kaon2_PZ" );
TTreeReaderValue <Double_t> kaon2_M ( myReader, "kaon2_M" );
TTreeReaderValue <Int_t> kaon2_ID ( myReader, "kaon2_ID" );
TTreeReaderValue <Double_t> kaon2_PIDe ( myReader, "kaon2_PIDe" );
TTreeReaderValue <Double_t> kaon2_PIDmu ( myReader, "kaon2_PIDmu" );
TTreeReaderValue <Double_t> kaon2_PIDK ( myReader, "kaon2_PIDK" );
TTreeReaderValue <Double_t> kaon2_PIDp ( myReader, "kaon2_PIDp" );
TTreeReaderValue <Double_t> kaon2_ProbNNe ( myReader, "kaon2_ProbNNe" );
TTreeReaderValue <Double_t> kaon2_ProbNNk ( myReader, "kaon2_ProbNNk" );
TTreeReaderValue <Double_t> kaon2_ProbNNp ( myReader, "kaon2_ProbNNp" );
TTreeReaderValue <Double_t> kaon2_ProbNNpi ( myReader, "kaon2_ProbNNpi" );
TTreeReaderValue <Double_t> kaon2_ProbNNmu ( myReader, "kaon2_ProbNNmu" );
TTreeReaderValue <Double_t> kaon2_ProbNNghost ( myReader, "kaon2_ProbNNghost" );
TTreeReaderValue <Bool_t> kaon2_hasMuon ( myReader, "kaon2_hasMuon" );
TTreeReaderValue <Bool_t> kaon2_isMuon ( myReader, "kaon2_isMuon" );
TTreeReaderValue <Bool_t> kaon2_hasRich ( myReader, "kaon2_hasRich" );
TTreeReaderValue <Bool_t> kaon2_hasCalo ( myReader, "kaon2_hasCalo" );
TTreeReaderValue <Int_t> kaon2_TRACK_Type ( myReader, "kaon2_TRACK_Type" );
TTreeReaderValue <Int_t> kaon2_TRACK_Key ( myReader, "kaon2_TRACK_Key" );
TTreeReaderValue <Double_t> kaon2_TRACK_CHI2NDOF ( myReader, "kaon2_TRACK_CHI2NDOF" );
TTreeReaderValue <Double_t> kaon2_TRACK_PCHI2 ( myReader, "kaon2_TRACK_PCHI2" );
TTreeReaderValue <Double_t> kaon2_TRACK_MatchCHI2 ( myReader, "kaon2_TRACK_MatchCHI2" );
TTreeReaderValue <Double_t> kaon2_TRACK_GhostProb ( myReader, "kaon2_TRACK_GhostProb" );
TTreeReaderValue <Double_t> kaon2_TRACK_CloneDist ( myReader, "kaon2_TRACK_CloneDist" );
TTreeReaderValue <Double_t> kaon2_TRACK_Likelihood ( myReader, "kaon2_TRACK_Likelihood" );

// T R A C K   &   T R I G G E R   V A R I A B L E S
//------------------------------------------------------------------------------

TTreeReaderValue <UInt_t> nCandidate ( myReader, "nCandidate" );
TTreeReaderValue <ULong64_t> totCandidates ( myReader, "totCandidates" );
TTreeReaderValue <ULong64_t> EventInSequence ( myReader, "EventInSequence" );
TTreeReaderValue <Double_t> nDownstream ( myReader, "nDownstream" );
TTreeReaderValue <Double_t> nLong ( myReader, "nLong" );
TTreeReaderValue <Double_t> nSpd ( myReader, "nSpd" );
TTreeReaderValue <Double_t> nUpstream ( myReader, "nUpstream" );
TTreeReaderValue <Double_t> nVelo ( myReader, "nVelo" );
TTreeReaderValue <UInt_t> runNumber ( myReader, "runNumber" );
TTreeReaderValue <ULong64_t> eventNumber ( myReader, "eventNumber" );
TTreeReaderValue <UInt_t> BCID ( myReader, "BCID" );
TTreeReaderValue <Int_t> BCType ( myReader, "BCType" );
TTreeReaderValue <UInt_t> OdinTCK ( myReader, "OdinTCK" );
TTreeReaderValue <UInt_t> L0DUTCK ( myReader, "L0DUTCK" );
TTreeReaderValue <UInt_t> HLTTCK ( myReader, "HLTTCK" );
TTreeReaderValue <ULong64_t> GpsTime ( myReader, "GpsTime" );
TTreeReaderValue <Short_t> Polarity ( myReader, "Polarity" );
TTreeReaderValue <Int_t> L0Data_DiMuon_Pt ( myReader, "L0Data_DiMuon_Pt" );
TTreeReaderValue <Int_t> L0Data_DiMuonProd_Pt1Pt2 ( myReader, "L0Data_DiMuonProd_Pt1Pt2" );
TTreeReaderValue <Int_t> L0Data_Electron_Et ( myReader, "L0Data_Electron_Et" );
TTreeReaderValue <Int_t> L0Data_GlobalPi0_Et ( myReader, "L0Data_GlobalPi0_Et" );
TTreeReaderValue <Int_t> L0Data_Hadron_Et ( myReader, "L0Data_Hadron_Et" );
TTreeReaderValue <Int_t> L0Data_LocalPi0_Et ( myReader, "L0Data_LocalPi0_Et" );
TTreeReaderValue <Int_t> L0Data_Muon1_Pt ( myReader, "L0Data_Muon1_Pt" );
TTreeReaderValue <Int_t> L0Data_Muon1_Sgn ( myReader, "L0Data_Muon1_Sgn" );
TTreeReaderValue <Int_t> L0Data_Muon2_Pt ( myReader, "L0Data_Muon2_Pt" );
TTreeReaderValue <Int_t> L0Data_Muon2_Sgn ( myReader, "L0Data_Muon2_Sgn" );
TTreeReaderValue <Int_t> L0Data_Muon3_Pt ( myReader, "L0Data_Muon3_Pt" );
TTreeReaderValue <Int_t> L0Data_Muon3_Sgn ( myReader, "L0Data_Muon3_Sgn" );
TTreeReaderValue <Int_t> L0Data_PUHits_Mult ( myReader, "L0Data_PUHits_Mult" );
TTreeReaderValue <Int_t> L0Data_PUPeak1_Cont ( myReader, "L0Data_PUPeak1_Cont" );
TTreeReaderValue <Int_t> L0Data_PUPeak1_Pos ( myReader, "L0Data_PUPeak1_Pos" );
TTreeReaderValue <Int_t> L0Data_PUPeak2_Cont ( myReader, "L0Data_PUPeak2_Cont" );
TTreeReaderValue <Int_t> L0Data_PUPeak2_Pos ( myReader, "L0Data_PUPeak2_Pos" );
TTreeReaderValue <Int_t> L0Data_Photon_Et ( myReader, "L0Data_Photon_Et" );
TTreeReaderValue <Int_t> L0Data_Spd_Mult ( myReader, "L0Data_Spd_Mult" );
TTreeReaderValue <Int_t> L0Data_Sum_Et ( myReader, "L0Data_Sum_Et" );
TTreeReaderValue <Int_t> L0Data_Sum_Et_Next1 ( myReader, "L0Data_Sum_Et,Next1" );
TTreeReaderValue <Int_t> L0Data_Sum_Et_Next2 ( myReader, "L0Data_Sum_Et,Next2" );
TTreeReaderValue <Int_t> L0Data_Sum_Et_Prev1 ( myReader, "L0Data_Sum_Et,Prev1" );
TTreeReaderValue <Int_t> L0Data_Sum_Et_Prev2 ( myReader, "L0Data_Sum_Et,Prev2" );
TTreeReaderValue <Int_t> NumberOfStdLooseAllPhotons ( myReader, "NumberOfStdLooseAllPhotons" );
TTreeReaderValue <Int_t> nPV ( myReader, "nPV" );
TTreeReaderValue <Float_t> PVX ( myReader, "PVX" );
TTreeReaderValue <Float_t> PVY ( myReader, "PVY" );
TTreeReaderValue <Float_t> PVZ ( myReader, "PVZ" );
TTreeReaderValue <Float_t> PVXERR ( myReader, "PVXERR" );
TTreeReaderValue <Float_t> PVYERR ( myReader, "PVYERR" );
TTreeReaderValue <Float_t> PVZERR ( myReader, "PVZERR" );
TTreeReaderValue <Float_t> PVCHI2 ( myReader, "PVCHI2" );
TTreeReaderValue <Float_t> PVNDOF ( myReader, "PVNDOF" );
TTreeReaderValue <Float_t> PVNTRACKS ( myReader, "PVNTRACKS" );
TTreeReaderValue <Int_t> L0Global ( myReader, "L0Global" );
TTreeReaderValue <UInt_t> Hlt1Global ( myReader, "Hlt1Global" );
TTreeReaderValue <UInt_t> Hlt2Global ( myReader, "Hlt2Global" );
TTreeReaderValue <Int_t> L0DiHadron_lowMultDecision ( myReader, "L0DiHadron,lowMultDecision" );
TTreeReaderValue <UInt_t> L0nSelections ( myReader, "L0nSelections" );
TTreeReaderValue <Int_t> Hlt1Decision ( myReader, "Hlt1Decision" );
TTreeReaderValue <UInt_t> Hlt1nSelections ( myReader, "Hlt1nSelections" );
TTreeReaderValue <Int_t> Hlt2LowMultChiC2HHDecision ( myReader, "Hlt2LowMultChiC2HHDecision" );
TTreeReaderValue <Int_t> Hlt2LowMultChiC2HHWSDecision ( myReader, "Hlt2LowMultChiC2HHWSDecision" );
TTreeReaderValue <UInt_t> Hlt2nSelections ( myReader, "Hlt2nSelections" );
TTreeReaderValue <Int_t> MaxRoutingBits ( myReader, "MaxRoutingBits" );
TTreeReaderValue <Float_t> RoutingBits ( myReader, "RoutingBits" );
